/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.client;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.Scanner;

/**
 *
 * @author root
 */
public class UiClient extends javax.swing.JFrame {
	int port = 9006;
	tryConnect connecting = new tryConnect();
	/**
	 * Creates new form UiClient
	 */
	public UiClient() {
		initComponents();
		tfPcName.setText(getStoredData("name"));
		tfServerIp.setText(getStoredData("ip"));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lablepcname = new javax.swing.JLabel();
        labelServerIp = new javax.swing.JLabel();
        tfPcName = new javax.swing.JTextField();
        tfServerIp = new javax.swing.JTextField();
        labelNotifications = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTitle.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        labelTitle.setText("Gestor");

        lablepcname.setText("PC name ");

        labelServerIp.setText("Server IP");

        tfPcName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPcNameActionPerformed(evt);
            }
        });

        tfServerIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfServerIpActionPerformed(evt);
            }
        });

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        jLabel1.setText("Click connect to connect to server");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lablepcname)
                    .addComponent(labelServerIp))
                .addGap(123, 123, 123)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPcName)
                    .addComponent(tfServerIp))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConnect)
                    .addComponent(labelTitle)
                    .addComponent(labelNotifications))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lablepcname)
                    .addComponent(tfPcName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelServerIp)
                    .addComponent(tfServerIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(btnConnect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelNotifications)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        labelTitle.getAccessibleContext().setAccessibleName("labelTitle");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfPcNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPcNameActionPerformed
        // TODO add your handling code here:
		if(!connecting.isAlive()){
			connecting.start();
		}
    }//GEN-LAST:event_tfPcNameActionPerformed

    private void tfServerIpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfServerIpActionPerformed
        // TODO add your handling code here:
		//System.out.println(getStoredData("ip"));
		if(!connecting.isAlive()){
			connecting.start();
		}
    }//GEN-LAST:event_tfServerIpActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
		if(!connecting.isAlive()){
			connecting.start();
		}
    }//GEN-LAST:event_btnConnectActionPerformed
	
	private boolean validateData(){
		String Ip = tfServerIp.getText();
		String name = tfPcName.getText();
		String recv = ""; 
		jLabel1.setText("Trying to connect to Server");
		try {
			Socket cs = new Socket(Ip,port);
			BufferedReader in= new BufferedReader(new InputStreamReader(cs.getInputStream()));
			BufferedOutputStream out = new BufferedOutputStream(cs.getOutputStream());
			System.out.println("name id is:"+ name);
			name = name +"\n";
			out.write(name.getBytes());
			out.flush();
			recv = in.readLine();
			setStoredData(Ip, name);
		}catch (Exception e){
			e.printStackTrace();
			recv="";
		}
		if(recv.equals("")){
			jLabel1.setText("Server connection refused");
			return false;
		}else {
			jLabel1.setText("Connected to Server");
			return true;
		}
	}
	public void setStoredData(String ip,String name){
		File file = new File("server.cfg");
        file.delete();
		String str = String.format("ip=%s\nname=%s",ip,name);
   		try(FileWriter fw = new FileWriter(file, true)) {
				fw.write(str);
		} catch(Exception e) {
				e.printStackTrace();
		}
	}
	public String getStoredData(String choice) {
		String temp = "";
		File file = new File("server.cfg");

                try(Scanner sc = new Scanner(file)) {
                	while(sc.hasNextLine()) {
                        	temp = sc.nextLine();

                                if(!temp.startsWith("#") && temp.split("=")[0].equals(choice)) {
                                        temp = temp.split("=")[1];
                                        break;
                                }
                        }
                } catch(IOException e) {
                	e.printStackTrace();
                }

		return temp;
	}
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(UiClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(UiClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(UiClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(UiClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		
		new server1().start();
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new UiClient().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelNotifications;
    private javax.swing.JLabel labelServerIp;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel lablepcname;
    private javax.swing.JTextField tfPcName;
    private javax.swing.JTextField tfServerIp;
    // End of variables declaration//GEN-END:variables
	class tryConnect extends Thread{
		public void run(){
			while (true){
				if(validateData()){
					break;
				}
				try{
					sleep(30000);
				}catch(InterruptedException e){e.printStackTrace();}
			}
		}
		
	}
}
